name: Test and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
#   test:
#     name: CI
#     runs-on: ubuntu-latest

#     services:
#       mysql:
#         image: mysql:8.0
#         env:
#           MYSQL_ROOT_PASSWORD: root
#           MYSQL_DATABASE: testing_db
#         ports:
#           - 3306:3306
#         options: >-
#           --health-cmd="mysqladmin ping --silent"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=3

#     env:
#       DB_CONNECTION: mysql
#       DB_HOST: 127.0.0.1
#       DB_PORT: 3306
#       DB_DATABASE: testing_db
#       DB_USERNAME: root
#       DB_PASSWORD: root

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: 8.2
#           extensions: mbstring, bcmath, xml, pdo_mysql, curl, zip

#       - name: Install Composer dependencies
#         working-directory: ./backend
#         run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

#       - name: Copy .env and generate app key + JWT secret
#         working-directory: ./backend
#         run: |
#           cp .env.example .env
#           php artisan key:generate
#           php artisan jwt:secret --force

#       - name: Wait for MySQL to be ready
#         run: |
#           until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
#             echo "Waiting for database connection..."
#             sleep 2
#           done
          
#       - name: Run migrations
#         working-directory: ./backend
#         run: php artisan migrate --force

#       - name: Run Laravel feature tests
#         working-directory: ./backend
#         run: ./vendor/bin/phpunit --testsuite=Feature

  deploy:
    name: CD
    # needs: test
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 15.188.195.97
          username: ubuntu
          key: ${{ secrets.FSE_TEAM4_EC2_SSH_KEY }}
          script: |
            # echo "âœ… Connected to EC2 successfully"
            # uname -a
            # whoami

            cd /home/ubuntu/celestique || git clone https://github.com/Hussein-Kobeisi/Celestique-e-store.git /home/ubuntu/celestique
            cd /home/ubuntu/celestique
            git pull origin main
      
            docker buildx create --use || true
            docker buildx version
      
            docker-compose down
            docker-compose up -d --build


            
            docker-compose down
            docker-compose up -d --build

